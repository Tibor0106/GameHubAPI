// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PTHUWEBAPI.Database;

#nullable disable

namespace SteamV2Webapi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240201223552_migrat")]
    partial class migrat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Steam2WebApi.Objects.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<string>("transactionData")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("SteamV2Webapi.Objects.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("gameId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("cart");
                });

            modelBuilder.Entity("SteamV2Webapi.Objects.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("popularity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("category");
                });

            modelBuilder.Entity("SteamV2Webapi.Objects.Friend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("friendId")
                        .HasColumnType("int");

                    b.Property<DateTime>("friend_since")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("friends");
                });

            modelBuilder.Entity("SteamV2Webapi.Objects.FriendRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("friendId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("friend_requests");
                });

            modelBuilder.Entity("SteamV2Webapi.Objects.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("banner")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("linkId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("longdescr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("popularity")
                        .HasColumnType("int");

                    b.Property<string>("shortdescr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("games");
                });

            modelBuilder.Entity("SteamV2Webapi.Objects.GameStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("achievements")
                        .HasColumnType("int");

                    b.Property<int>("gameId")
                        .HasColumnType("int");

                    b.Property<int>("level")
                        .HasColumnType("int");

                    b.Property<int>("playerHours")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("game_stats");
                });

            modelBuilder.Entity("SteamV2Webapi.Objects.Library", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("gameId")
                        .HasColumnType("int");

                    b.Property<DateTime>("purchased_since")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("library");
                });

            modelBuilder.Entity("SteamV2Webapi.Objects.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("edited")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("messageBody")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("messageSent")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("receiverId")
                        .HasColumnType("int");

                    b.Property<int>("senderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("SteamV2Webapi.Objects.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("publisherIcon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("publisherId")
                        .HasColumnType("int");

                    b.Property<string>("publisherName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("publisher");
                });

            modelBuilder.Entity("SteamV2Webapi.Objects.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("discount")
                        .HasColumnType("int");

                    b.Property<bool>("featured")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("gameId")
                        .HasColumnType("int");

                    b.Property<int>("popularity")
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("publisherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("shop");
                });

            modelBuilder.Entity("SteamV2Webapi.Objects.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("avatar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("last_heartbeat")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("online")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
